
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author Iran
 */
public class DialogTabelaProfessor extends javax.swing.JDialog {

    String NomeEscala;   
    int NDias=0; 
    int NFiscais=0;
    int StatusDados=0;
     int gravar=0; 
     int [][]SalasFiscais;
     DefaultTableModel modelo = new DefaultTableModel();
     //**********************************************************
           ////jTableProfessores.getValueAt(lin-1,Col-1)    RETORNA UM OBJETO
           //************************************************
    /**
     * Creates new form DialogProfessor
     */
    public DialogTabelaProfessor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProfessores = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextNomedaEscala = new javax.swing.JTextField();
        jLabelNDias = new javax.swing.JLabel();
        jTextnDias = new javax.swing.JTextField();
        jButtonContinuar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextnFiscais = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonCancelar.setText("CANCELAR");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Professores nos Dias"));

        jTableProfessores.setAutoCreateRowSorter(true);
        jTableProfessores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "A", "B"
            }
        ));
        jTableProfessores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableProfessores.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane2.setViewportView(jTableProfessores);

        jLabel2.setText("Nome da Escala");

        jTextNomedaEscala.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextNomedaEscala.setToolTipText("");

        jLabelNDias.setText("Número de dias");

        jTextnDias.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextnDias.setToolTipText("");

        jButtonContinuar.setText("CONTINUAR");
        jButtonContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinuarActionPerformed(evt);
            }
        });

        jLabel3.setText("Número de Fiscais Disponíveis");

        jTextnFiscais.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextnFiscais.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNDias, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextNomedaEscala, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextnDias, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonContinuar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCancelar)))
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextnFiscais)
                        .addGap(95, 95, 95))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextNomedaEscala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextnDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNDias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextnFiscais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonContinuar))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(495, 478));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        StatusDados= 0;
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed
        public int Status(){
        
     return StatusDados;
             
    }
    private void jButtonContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinuarActionPerformed
        ///LER TODOS OS DADOS E CONTINUAR SE TUDO ESTIVER CERTO
//FALATAR FAZER ESTA LEITURA DOS DADOS PARA SABER SE ESTA TUDO CERTO
        ler_dados();

        if (gravar == 1){
            //            //Salva os dados e sai
            //            gravar_dados();

            //ENVIAR VALORES
            //    Horario_Escala fprincipal = new Horario_Escala();
            // //ou assim JFrameCriar_Escala dlgtemp= new JFrameCriar_Escala(this, true);//mas não sei a diferença ainda
            StatusDados= 1;
                 //
            //Horario_Escala main= new Horario_Escala(NomeEscala,Nundaescala, Status );
            //
            //        main.Receber_dados_Criados(ndias,nprof);//,nmaxreserva,nmaxfiscal);
        //        main.setVisible(true);
        //                     Status= 1;
        dispose();

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonContinuarActionPerformed

    public int[][] matriz(){
         
         return SalasFiscais;
         
     }
    
    public DefaultTableModel PegarTabelaFis() {
        return modelo;
    }
        
    
     public void ler_dados(){
//        DefaultTableModel modelo = new DefaultTableModel();
//        JTable TableFiscais = new JTable(modelo);// serve para depois colocar na tela. gpt disse. rsrsrs
        int ContCol=0;
      SalasFiscais = new int [3*NFiscais][NDias];//o comprimento sera o numero de dias   
     
        for (int Col = 3; Col<=NDias+2 ;Col++){ //+2 por conta das colunas fiscal e horário
            ContCol=ContCol+2;
              modelo.addColumn("Dia"+(Col-3));//texto dia1,dia2,....
//            modelo.addColumn("Livre"+Col);//texto Livre1,Livre2,....
//             System.out.println("215 tabela  Coluna  "+(Col-3));  
      for (int lin = 1; lin<=3*NFiscais ;lin++){ 
           modelo.addRow(new Object [] {""} );
     
            String tes1 = jTableProfessores.getValueAt(lin-1,Col-1).toString();
            SalasFiscais [lin-1] [Col-3]=Integer.parseInt( tes1);

          modelo.setValueAt(SalasFiscais [lin-1] [Col-3], lin-1, Col-3);//1h

//      System.out.print(" "+modelo.getValueAt(lin-1,Col-3));

      
       }
//      System.out.println(" ");
      } 
        gravar =1;
//        testandomodelo.moveRow(1,2 ,4);
     }
     
    public void MontarTabela(){
       
             //***************** MONTAR TABELA ***************************  
        jTextNomedaEscala.setText(NomeEscala);
jTextnDias.setText(String.valueOf(NDias));
jTextnFiscais.setText(String.valueOf(NFiscais));

 DefaultTableModel modeloProfessores = (DefaultTableModel) jTableProfessores.getModel();
            modeloProfessores.setColumnCount(0);
// ****** CRIA AS COLUNAS *****************************            

               modeloProfessores.addColumn("FISCAL", new Object [] {""});
               modeloProfessores.addColumn("HORÁRIO", new Object [] {""});
               for (int i = 1; i<=NDias ;i++){
               modeloProfessores.addColumn("DIA"+i, new Object [] {""});
//               modeloProfessores.addColumn("Livre"+i, new Object [] {""});
               }
             //  modeloProfessores.addColumn("N Reservas", new Object [] {""});

// ******  FIM DE CRIAR AS COLUNAS *****************************
        
        // ****** CRIA AS LINHAS COM VALORES PADRÕES *****************************            
int lin1=-3;
//int lin2=-2;
for (int lin = 1; lin<=NFiscais ;lin++){//cria as linhas = turmas2*
            modeloProfessores.addRow(new Object [] { ""} );
 lin1=lin1+3;
//lin2=lin2+3;
//lin2=lin2+3;

 modeloProfessores.setValueAt("Fiscal"+lin, lin1, 0);
     modeloProfessores.setValueAt("1h", lin1, 1);
     
       modeloProfessores.addRow(new Object [] { ""} );
       modeloProfessores.setValueAt("Fiscal"+lin, lin1+1, 0);
       modeloProfessores.setValueAt("2h", lin1+1, 1);
       modeloProfessores.addRow(new Object [] { ""} );//linha do livre
       modeloProfessores.setValueAt("LIVRE", lin1+2, 0);
       
         for (int col = 1; col<=NDias;col++){
       modeloProfessores.setValueAt(lin1, lin1, col+1);//colocar 1 depois no lugar de lin+1
       modeloProfessores.setValueAt(lin1+1, lin1+1, col+1);
       modeloProfessores.setValueAt(100, lin1+2, col+1);// valor do livre
      }
       
//              modeloProfessores.setValueAt("1", ln1, NDias+1);// já está no for
              
      // tentar colocar em 1 só for os dias do 1h e 2h        
              
//                modeloProfessores.addRow(new Object [] { ""} );
//                modeloProfessores.setValueAt("Fiscal"+i, lin2, 0);
//                modeloProfessores.setValueAt("2h", lin2, 1);
//                 for (int li2 = 1; li2<=NDias+1 ;li2++){
//               
//                 }
//                modeloProfessores.setValueAt("1", lin2, NDias+1);// já está no for
                
        }
// ******  FIM DE CRIAR AS LINHAS COM VALORES PADRÕES *****************************

DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        jTableProfessores.getColumnModel().getColumn(0).setPreferredWidth(60);
         jTableProfessores.getColumnModel().getColumn(1).setPreferredWidth(80);
             jTableProfessores.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        jTableProfessores.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
          for (int li = 1; li<=NDias;li++){
         jTableProfessores.getColumnModel().getColumn(li+1).setPreferredWidth(40);
             jTableProfessores.getColumnModel().getColumn(li+1).setCellRenderer(centerRenderer);
          }
//         jTableProfessores.getColumnModel().getColumn(NDias+2).setPreferredWidth(120);
//         jTableProfessores.getColumnModel().getColumn(NDias+2).setCellRenderer(centerRenderer);
//***************** FIM DE MONTAR TABELA ***************************      
    }
    
    
    public void Receber_NFisc_NDias_Nome(int NFiscinput, int NDiasinput, String NomeEscalaimput){
     
       NomeEscala=NomeEscalaimput;   
       NDias=   NDiasinput;
       NFiscais=NFiscinput;
       MontarTabela();
        
   } 
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogTabelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogTabelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogTabelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogTabelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogTabelaProfessor dialog = new DialogTabelaProfessor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonContinuar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelNDias;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableProfessores;
    private javax.swing.JTextField jTextNomedaEscala;
    private javax.swing.JTextField jTextnDias;
    private javax.swing.JTextField jTextnFiscais;
    // End of variables declaration//GEN-END:variables
}
